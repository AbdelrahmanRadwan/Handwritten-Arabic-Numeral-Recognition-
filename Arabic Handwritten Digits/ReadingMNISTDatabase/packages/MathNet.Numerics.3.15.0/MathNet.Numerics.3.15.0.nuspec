<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
  <metadata>
    <id>MathNet.Numerics</id>
    <version>3.15.0</version>
    <title>Math.NET Numerics</title>
    <authors>Christoph Ruegg,Marcus Cuda,Jurgen Van Gael</authors>
    <owners>Christoph Ruegg,Marcus Cuda,Jurgen Van Gael</owners>
    <licenseUrl>http://numerics.mathdotnet.com/License.html</licenseUrl>
    <projectUrl>http://numerics.mathdotnet.com/</projectUrl>
    <iconUrl>http://www.mathdotnet.com/images/MathNet128.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Math.NET Numerics is the numerical foundation of the Math.NET project, aiming to provide methods and algorithms for numerical computations in science, engineering and every day use. Supports .Net 4.0, .Net 3.5 and Mono on Windows, Linux and Mac; Silverlight 5, WindowsPhone/SL 8, WindowsPhone 8.1 and Windows 8 with PCL portable profiles 7, 47, 78, 259 and 328; Android/iOS with Xamarin.</description>
    <summary>Math.NET Numerics, providing methods and algorithms for numerical computations in science, engineering and every day use.</summary>
    <releaseNotes>FFT: MKL native provider backend.
FFT: 2D and multi-dimensional FFT (only supported by MKL provider, managed provider pending).
FFT: real conjugate-even FFT (only leveraging symmetry in MKL provider).
FFT: managed provider significantly faster on x64.
Linear Algebra: pointwise trigonometric and basic functions ~Albert Pang
Linear Algebra: better support for F# built-in operators (sqrt, sin, exp, ..) ~Albert Pang
Linear Algebra: pointwise power operator (F#)
Linear Algebra: enable experimental matrix product implementation
Linear Algebra: better support for matrix to/from row-major arrays and enumerables
Linear Algebra: transport allows specifying a result matrix to transpose into, inplace if square
Linear Algebra: vector and matrix AsArray and similar to access internal arrays if applicable
Linear Algebra: vector and matrix pointwise min/max and absmin/absmax
Linear Algebra: dot-power on vectors and matrices, supporting native providers.
Linear Algebra: matrix Moore-Penrose pseudo-inverse (SVD backed).
Provider Control: separate Control classes for LA and FFT Providers.
Provider Control: avoid internal exceptions on provider discovery.
Distributions: fix misleading inline docs on Negative-Binomial.
Generate: linear integer ranges
Root Finding: extend zero-crossing bracketing in derivative-free algorithms.
Window: periodic versions of Hamming, Hann, Cosine and Lanczos windows.
Special Functions: more robust GammaLowerRegularizedInv (and Gamma.InvCDF).
BUG: ODE Solver: fix bug in Runge-Kutta second order routine ~Ksero</releaseNotes>
    <tags>math numeric statistics probability integration interpolation regression solve fit linear algebra matrix fft</tags>
    <dependencies>
      <group targetFramework=".NETFramework3.5">
        <dependency id="TaskParallelLibrary" version="1.0.2856" />
      </group>
      <group targetFramework=".NETFramework4.0" />
    </dependencies>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="System.Numerics" targetFramework=".NETFramework400.0" />
    </frameworkAssemblies>
  </metadata>
</package>